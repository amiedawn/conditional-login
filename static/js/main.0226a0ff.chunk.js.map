{"version":3,"sources":["components/success/Success.js","components/failure/Failure.js","components/LoginForm.js","App.js","index.js"],"names":["Success","props","Failure","LoginForm","match","error","isValid","path","useState","username","password","formState","setFormState","className","onSubmit","event","preventDefault","htmlFor","name","type","id","onChange","e","target","value","exact","element","App","userMatch","setUser","setError","data","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAUeA,MARf,SAAiBC,GACf,OACE,8BACE,iFCKSC,MARf,SAAiBD,GACf,OACE,8BACE,iECgDSE,MAhDf,YAAqD,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QACjC,GADkD,EAARC,KACRC,mBAAS,CAAEC,SAAU,GAAIC,SAAU,MAArE,mBAAOC,EAAP,KAAkBC,EAAlB,KAOA,OACE,uBAAMC,UAAU,iBAAiBC,SANV,SAACC,GACxBA,EAAMC,iBACPZ,EAAMO,IAIL,UACE,sBAAKE,UAAU,aAAf,UACa,KAAVR,EAAe,qBAAKQ,UAAU,QAAf,SAAwBR,IAAe,GACvD,sBAAKQ,UAAU,cAAf,UACE,uBAAOI,QAAQ,WAAf,wBACA,uBACEC,KAAK,WACLC,KAAK,OACLC,GAAG,WACHC,SAAU,SAACC,GAAD,OACRV,EAAa,2BAAKD,GAAN,IAAiBF,SAAUa,EAAEC,OAAOC,UAElDA,MAAOb,EAAUF,cAGrB,sBAAKI,UAAU,cAAf,UACE,uBAAOI,QAAQ,WAAf,wBACA,uBACEC,KAAK,WACLC,KAAK,WACLC,GAAG,WACHC,SAAU,SAACC,GAAD,OACRV,EAAa,2BAAKD,GAAN,IAAiBD,SAAUY,EAAEC,OAAOC,UAElDA,MAAOb,EAAUD,cAGrB,uBAAOS,KAAK,SAASK,MAAM,aAE7B,cAAC,IAAD,UACE,eAAC,IAAD,YACIlB,GAAW,cAAC,IAAD,CAAOmB,OAAK,EAAClB,KAAK,IAAImB,QAAS,cAAC,EAAD,MAC3CpB,GAAW,cAAC,IAAD,CAAOmB,OAAK,EAAClB,KAAK,WAAWmB,QAAS,cAAC,EAAD,eCzC7C,SAASC,IACtB,IAAMC,EACM,WADNA,EAEM,cAGZ,EAAwBpB,mBAAS,CAAEC,SAAU,KAA7C,mBAAaoB,GAAb,WACA,EAA0BrB,mBAAS,IAAnC,mBAAOH,EAAP,KAAcyB,EAAd,KACGxB,GAAU,EACVC,EAAO,GA4BV,OACE,cAAC,EAAD,CAAWH,MA3BC,SAAC2B,GAuBb,OAtBAC,QAAQC,IAAIF,GAGVA,EAAKtB,WAAamB,GAClBG,EAAKrB,WAAakB,GAElBC,EAAQ,CACNpB,SAAUsB,EAAKtB,WAEjBH,GAAU,EACVC,EAAO,WACPyB,QAAQC,IAAI,YAAa3B,GACzB0B,QAAQC,IAAI,SAAU1B,KAGtBuB,EAAS,IACTxB,GAAU,EACVC,EAAO,WACPyB,QAAQC,IAAI,YAAa3B,GACzB0B,QAAQC,IAAI,SAAU1B,IAGjBD,GAIkBD,MAAOA,EAAOC,QAASA,EAASC,KAAMA,ICrCnE2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0226a0ff.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Success(props) {\n  return (\n    <div>\n      <h2>Success! Your login credentials are a match!</h2>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from \"react\";\n\nfunction Failure(props) {\n  return (\n    <div>\n      <h2>Login credentials incorrect!</h2>\n    </div>\n  );\n}\n\nexport default Failure;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Success from \"./success/Success\";\nimport Failure from \"./failure/Failure\";\n\nfunction LoginForm({ match, error, isValid, path }) {\n  const [formState, setFormState] = useState({ username: \"\", password: \"\" });\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n   match(formState);\n  };\n\n  return (\n    <form className=\"form-container\" onSubmit={handleFormSubmit}>\n      <div className=\"form-group\">\n        {error !== \"\" ? <div className=\"error\">{error}</div> : \"\"}\n        <div className=\"input-field\">\n          <label htmlFor=\"username\">Username: </label>\n          <input\n            name=\"username\"\n            type=\"text\"\n            id=\"username\"\n            onChange={(e) =>\n              setFormState({ ...formState, username: e.target.value })\n            }\n            value={formState.username}\n          />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"password\">Password: </label>\n          <input\n            name=\"password\"\n            type=\"password\"\n            id=\"password\"\n            onChange={(e) =>\n              setFormState({ ...formState, password: e.target.value })\n            }\n            value={formState.password}\n          />\n        </div>\n        <input type=\"submit\" value=\"Login\" />\n      </div>\n      <Router>\n        <Routes>\n          {!isValid && <Route exact path=\"/\" element={<Failure />} />}\n          {isValid && <Route exact path=\"/success\" element={<Success />} />}\n        </Routes>\n      </Router>\n    </form>\n  );\n}\n\nexport default LoginForm;\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport LoginForm from \"./components/LoginForm\";\n\n\nexport default function App() {\n  const userMatch = {\n    username: \"testuser\",\n    password: \"password123\",\n  };\n\n  const [user, setUser] = useState({ username: \"\" });\n  const [error, setError] = useState(\"\");\n var isValid = false;\n var path = \"\";\n\n  const match = (data) => {\n    console.log(data);\n   \n    if (\n      data.username === userMatch.username &&\n      data.password === userMatch.password\n    ) {\n      setUser({\n        username: data.username,\n      });\n      isValid = true;\n      path = \"/success\";\n      console.log(\"isValid: \", isValid);\n      console.log(\"path: \", path);\n     \n    } else {\n      setError(\"\");\n      isValid = false;\n      path = \"/failure\";\n      console.log(\"isValid: \", isValid);\n      console.log(\"path: \", path);\n      \n    }\n    return isValid;\n  };\n\n  return (\n    <LoginForm match={match} error={error} isValid={isValid} path={path} />\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}